{"version":3,"sources":["components/Meals/MealsSummary.module.css","components/UI/Card.module.css","components/Meals/MealItemForm.module.css","components/UI/Input.module.css","components/Cart/Cart.module.css","store/cart-context.js","assets/meals.jpg","components/Cart/CartIcon.js","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/Meals/MealsSummary.js","components/UI/Card.js","components/UI/Input.js","components/Meals/MealItemForm.js","components/Meals/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","components/UI/Modal.js","components/UI/CustomButton.js","components/Cart/CartItem.js","components/Cart/CheckoutForm.js","components/Cart/Cart.js","store/CartProvider.js","App.js","index.js","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/MealItem.module.css","components/Meals/AvailableMeals.module.css","components/UI/Modal.module.css","components/Layout/Header.module.css"],"names":["module","exports","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","itemId","clearCart","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","props","cartCtx","useContext","useState","btnIsHighlighted","setBtnIsHighlighted","numberOfItems","reduce","curNumber","amount","btnClasess","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","Fragment","header","onHandleModal","src","mealsImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","id","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","price","toFixed","meal","name","description","cartAmount","AvailableMeals","meals","setMeals","isLoading","setIsLoading","errorMessage","setErrorMessage","a","axios","get","key","response","mealsArray","data","push","message","fetchMeals","mealsList","map","loading","error","Meals","Backdrop","backdrop","ModalOverlay","modal","content","portalElemnt","document","getElementById","Modal","ReactDOM","createPortal","NegativeButton","withStyles","root","backgroundColor","borderColor","color","Button","PositiveButton","CustomButton","buttoProps","variant","disabled","buttonType","CartItem","actions","onRemove","onAdd","MyTextField","useField","field","meta","errorText","touched","fields","TextField","helperText","FormSchema","Yup","shape","required","email","street","postalCode","CheckoutForm","initialValues","validationSchema","values","setSubmitting","resetForm","onSubmitForm","isSubmitting","size","hideForm","Cart","showForm","setShowForm","isSubmitted","setIsSubmitted","isFormBeingSubmitted","setIsFormBeingSubmitted","totalAmountZero","cartTotalAmount","hasItems","cartItemRemoveHandler","cartItemAddHandler","cartItems","bind","submitOrderHandler","clientInfo","post","user","orderedItems","Error","afterSubmitMessage","cartContent","total","loadingSubmit","defaultCartState","cartReducer","state","action","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","updateItems","updateTotalAmount","filter","CartProvider","useReducer","cartState","dispatchCart","cartContext","Provider","App","isCartOpen","setIsCartOpen","cartStateHandler","render"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,gC,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,oBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,yCCA1BD,EAAOC,QAAU,CAAC,aAAa,yBAAyB,MAAQ,oBAAoB,eAAe,2BAA2B,QAAU,sBAAsB,OAAS,uB,6FCSxJC,EARKC,IAAMC,cAAc,CACpCC,MAAO,GACPC,YAAa,EACbC,QAAS,SAACC,KACVC,WAAY,SAACC,KACbC,UAAW,eCPA,MAA0B,kC,wBCYxBC,EAZA,WACb,OACE,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBAAMC,EAAE,+R,iBCoCDC,EArCU,SAAAC,GACvB,IAAMC,EAAUC,qBAAWlB,GAC3B,EAAgDmB,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACQlB,EAAUc,EAAVd,MAEFmB,EAAgBnB,EAAMoB,QAAO,SAACC,EAAWlB,GAC7C,OAAOkB,EAAYlB,EAAKmB,SACvB,GAEGC,EAAU,UAAMC,IAAQC,OAAd,YAAwBR,EAAmBO,IAAQE,KAAO,IAiB1E,OAfAC,qBAAU,WACR,GAAoB,IAAjB3B,EAAM4B,OAAT,CAGAV,GAAoB,GAEpB,IAAMW,EAAQC,YAAW,WACvBZ,GAAoB,KACnB,KAEH,OAAO,WACLa,aAAaF,OAEd,CAAC7B,IAGA,yBAAQgC,UAAWT,EAAYU,QAASpB,EAAMoB,QAA9C,UACE,sBAAMD,UAAWR,IAAQU,KAAzB,SACE,cAAC,EAAD,MAEF,6CACA,sBAAMF,UAAWR,IAAQW,MAAzB,SAAiChB,QCjB1BiB,EAfA,SAACvB,GACZ,IAAMC,EAAUC,qBAAWlB,GAC3B,OACI,eAAC,IAAMwC,SAAP,WACI,yBAAQL,UAAWR,IAAQc,OAA3B,UACI,uDACA,cAAC,EAAD,CAAkBL,QAAS,kBAAMpB,EAAM0B,cAAczB,EAAQb,mBAEjE,qBAAK+B,UAAWR,IAAQ,cAAxB,SACI,qBAAKgB,IAAKC,EAAYC,IAAI,+B,kBCG3BC,EAhBM,WACnB,OACE,0BAASX,UAAWR,IAAQoB,QAA5B,UACE,kEACA,qJAIA,6I,mDCFSC,EANF,SAAAhC,GACT,OACI,qBAAKmB,UAAWR,IAAQsB,KAAxB,SAA+BjC,EAAMkC,Y,qDCQ9BC,EATDlD,IAAMmD,YAAW,SAACpC,EAAOqC,GACnC,OACI,sBAAKlB,UAAWR,IAAQ2B,MAAxB,UACI,uBAAOC,QAASvC,EAAMsC,MAAME,GAA5B,SAAiCxC,EAAMyC,QACvC,mCAAOJ,IAAKA,GAASrC,EAAMsC,cCqCxBI,EAxCM,SAAA1C,GACjB,MAA0CG,oBAAS,GAAnD,mBAAOwC,EAAP,KAAsBC,EAAtB,KACMC,EAAiBC,mBAmBvB,OACI,uBAAM3B,UAAWR,IAAQoC,KAAMC,SAlBb,SAAAC,GAClBA,EAAMC,iBAEN,IAAMC,EAAgBN,EAAeO,QAAQC,MACvCC,GAAuBH,EAEM,IAAhCA,EAAcI,OAAOxC,QACxBuC,EAAsB,GACtBA,EAAsB,EAElBV,GAAiB,GAGrB5C,EAAMwD,YAAYF,IAKlB,UACI,cAAC,EAAD,CACAjB,IAAKQ,EACLJ,MAAM,SACNH,MAAO,CACHE,GAAI,UAAYxC,EAAMwC,GACtBiB,KAAM,SACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,aAAc,OAElB,4CACElB,GAAiB,yECPhBmB,EA3BE,SAAA9D,GACb,IAAMC,EAAUC,qBAAWlB,GACrB+E,EAAK,WAAO/D,EAAM+D,MAAMC,QAAQ,IAUtC,OAEI,qBAAI7C,UAAWR,IAAQsD,KAAvB,UACI,gCACI,6BAAKjE,EAAMkE,OACX,qBAAK/C,UAAWR,IAAQwD,YAAxB,SAAsCnE,EAAMmE,cAC5C,qBAAKhD,UAAWR,IAAQoD,MAAxB,SAAgCA,OAEpC,8BACI,cAAC,EAAD,CAAcvB,GAAIxC,EAAMwC,GAAIgB,YAjBf,SAAAY,GACrBnE,EAAQZ,QAAQ,CACZmD,GAAIxC,EAAMwC,GACV0B,KAAMlE,EAAMkE,KACZzD,OAAQ2D,EACRL,MAAO/D,EAAM+D,iB,kCCwCVM,EAhDQ,WAErB,MAA0BlE,mBAAS,IAAnC,mBAAOmE,EAAP,KAAcC,EAAd,KACA,EAAkCpE,oBAAS,GAA3C,mBAAOqE,EAAP,KAAkBC,EAAlB,KACA,EAAwCtE,mBAAS,IAAjD,mBAAOuE,EAAP,KAAqBC,EAArB,KAEA7D,qBAAU,WAAM,4CACb,gCAAA8D,EAAA,+EAEwBC,IAAMC,IAAI,mEAFlC,OAKC,IAAWC,KAHLC,EAFP,OAGOC,EAAa,GAEDD,EAASE,KACzBD,EAAWE,KAAX,2BAAoBH,EAASE,KAAKH,IAAlC,IAAwCvC,GAAIuC,KAE9CR,EAASU,GACTR,GAAa,GATd,kDAYGE,EAAgB,KAAMS,SACtBX,GAAa,GAbhB,2DADa,uBAAC,WAAD,wBAkBdY,KACC,IAEH,IAAMC,EAAYhB,EAAMiB,KAAI,SAACtB,GAC3B,OAAQ,cAAC,EAAD,CAENzB,GAAIyB,EAAKzB,GACT0B,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAClBJ,MAAOE,EAAKF,OAJPE,EAAKzB,OAQd,OACE,yBAASrB,UAAWR,IAAQ2D,MAA5B,SACE,eAAC,EAAD,YACIE,GAAa,6BAAKc,IACnBd,GAAa,mBAAGrD,UAAWR,IAAQ6E,QAAtB,sBACZhB,KAAeE,GAAgB,oBAAGvD,UAAWR,IAAQ8E,MAAtB,qCAAsDf,WCnChFgB,EATD,WACX,OACC,eAAC,WAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,iBCJFC,EAAW,SAAA3F,GACb,OAAO,qBAAKmB,UAAWR,IAAQiF,SAAUxE,QAAS,kBAAMpB,EAAMoB,SAAQ,OAGpEyE,EAAe,SAAA7F,GACjB,OACI,qBAAKmB,UAAWR,IAAQmF,MAAxB,SACI,qBAAK3E,UAAWR,IAAQoF,QAAxB,SAAkC/F,EAAMkC,cAK9C8D,EAAeC,SAASC,eAAe,YAW9BC,EATD,SAAAnG,GACV,OACI,eAAC,WAAD,WACKoG,IAASC,aAAa,cAAC,EAAD,CAAUjF,QAASpB,EAAMoB,UAAY4E,GAC3DI,IAASC,aAAa,cAAC,EAAD,UAAerG,EAAMkC,WAA0B8D,O,iCCnB5EM,EAAiBC,aAAW,iBAAO,CACrCC,KAAM,CACJC,gBAAiB,mBACjBC,YAAa,mBACb,UAAW,CACTD,gBAAiB,mBACjBC,YAAa,mBACbC,MAAO,aAPQJ,CAUjBK,KAEAC,GAAiBN,aAAW,iBAAO,CACrCC,KAAM,CACJC,gBAAiB,UACjBC,YAAa,UACb,UAAW,CACTD,gBAAiB,UACjBC,YAAa,UACbC,MAAO,aAPQJ,CAUjBK,KAqBWE,GAnBM,SAAC9G,GAEpB,IAAM+G,EAAa,CACfJ,MAAO3G,EAAM2G,MACbvF,QAASpB,EAAMoB,QACf4F,QAAShH,EAAMgH,QACfvD,KAAMzD,EAAMyD,KACZwD,SAAUjH,EAAMiH,UAGpB,MAAwB,aAArBjH,EAAMkH,WACE,cAACZ,EAAD,2BAAoBS,GAApB,aAAiC/G,EAAMkC,YAEvC,cAAC2E,GAAD,2BAAoBE,GAApB,aAAiC/G,EAAMkC,aCXvCiF,GA1BE,SAACnH,GAChB,IAAM+D,EAAK,WAAO/D,EAAM+D,MAAMC,QAAQ,IACtC,OACE,qBAAI7C,UAAWR,IAAQ,aAAvB,UACE,gCACE,6BAAKX,EAAMkE,OACX,sBAAK/C,UAAWR,IAAQoB,QAAxB,UACE,sBAAMZ,UAAWR,IAAQoD,MAAzB,SAAiCA,IACjC,uBAAM5C,UAAWR,IAAQF,OAAzB,eAAoCT,EAAMS,gBAG9C,sBAAKU,UAAWR,IAAQyG,QAAxB,UACE,cAAC,GAAD,CACAF,WAAW,WACXF,QAAQ,WACRL,MAAM,YACNvF,QAASpB,EAAMqH,SAJf,oBAKA,cAAC,GAAD,CACAH,WAAW,WACXF,QAAQ,WACRL,MAAM,YAAWvF,QAASpB,EAAMsH,MAHhC,sB,gDCbFC,GAAc,SAAC,GAAgB,IAAZvH,EAAW,oBAChC,EAAsBwH,aAASxH,GAA/B,mBAAOyH,EAAP,KAAcC,EAAd,KACMC,EAAYD,EAAKjC,OAASiC,EAAKE,QAAUF,EAAKjC,MAAQ,GAE5D,OACI,qBAAKtE,UAAWR,KAAQkH,OAAxB,SACI,cAACC,GAAA,EAAD,uCAAe9H,GAAWyH,GAA1B,IAAiCM,WAAYJ,EAAWlC,QAASkC,QAKvEK,GAAaC,OAAaC,MAAM,CAClChE,KAAM+D,OACLvE,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRwE,SAAS,YAEVC,MAAOH,OACNG,MAAM,iBACND,SAAS,YAEVE,OAAQJ,OACPE,SAAS,YAEVG,WAAYL,OACXvE,IAAI,EAAG,uBACPC,IAAI,GAAI,uBACRwE,SAAS,cAqCCI,GAhCM,SAACvI,GAClB,OACI,cAAC,KAAD,CACAwI,cAAe,CACbtE,KAAM,GACNkE,MAAO,GACPC,OAAQ,GACRC,WAAY,IACdG,iBAAkBT,GAClBhF,SAAU,SAAE0F,EAAF,GAA4C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACnC5I,EAAM6I,aAAaH,GACnBC,GAAc,GACdC,KAVF,SAaG,gBAAGE,EAAH,EAAGA,aAAH,OACC,eAAC,KAAD,WACI,cAAC,GAAD,CAAa9B,QAAQ,WAAWvE,MAAM,YAAYsG,KAAK,QAAQ7E,KAAK,OAAOT,KAAK,UAChF,cAAC,GAAD,CAAauD,QAAQ,WAAWvE,MAAM,QAAQsG,KAAK,QAAQ7E,KAAK,QAAQT,KAAK,UAC7E,cAAC,GAAD,CAAauD,QAAQ,WAAWvE,MAAM,SAASsG,KAAK,QAAQ7E,KAAK,SAAST,KAAK,UAC/E,cAAC,GAAD,CAAauD,QAAQ,WAAWvE,MAAM,cAAcsG,KAAK,QAAQ7E,KAAK,aAAaT,KAAK,UAE1F,sBAAKtC,UAAWR,KAAQyG,QAAxB,UACE,cAAC,GAAD,CAAcF,WAAW,WAAWzD,KAAK,SAASkD,MAAM,UAAUK,QAAQ,YAAYC,SAAU6B,EAAhG,oBACA,cAAC,GAAD,CAAc5B,WAAW,WAAWF,QAAQ,YAAYL,MAAM,YAAYvF,QAAS,WAAOpB,EAAMgJ,YAAhG,8BC0DDC,GA/GF,SAAAjJ,GACT,MAAgCG,oBAAS,GAAzC,mBAAO+I,EAAP,KAAiBC,EAAjB,KACA,EAAsChJ,oBAAS,GAA/C,mBAAOiJ,EAAP,KAAoBC,EAApB,KACA,EAAwDlJ,oBAAS,GAAjE,mBAAOmJ,EAAP,KAA6BC,EAA7B,KAEMtJ,EAAUC,qBAAWlB,GACrBwK,EAAkBvJ,EAAQb,YAAc,KACxCqK,EAAe,WAAOxJ,EAAQb,YAAY4E,QAAQ,IAClD0F,EAAWzJ,EAAQd,MAAM4B,OAAS,EAElC4I,EAAwB,SAAAnH,GAC1BvC,EAAQV,WAAWiD,IAGjBoH,EAAqB,SAAAtK,GACvBW,EAAQZ,QAAR,2BAAoBC,GAApB,IAA0BmB,OAAQ,MAEhCoJ,EACN,oBAAI1I,UAAWR,KAAQ,cAAvB,SACKV,EAAQd,MAAMoG,KAAI,SAAAjG,GACnB,OACI,8BACI,cAAC,GAAD,CACAkD,GAAIlD,EAAKkD,GACT0B,KAAM5E,EAAK4E,KACXzD,OAAQnB,EAAKmB,OACbsD,MAAOzE,EAAKyE,MACZsD,SAAUsC,EAAsBG,KAAK,KAAMxK,EAAKkD,IAChD8E,MAAOsC,EAAmBE,KAAK,KAAMxK,MAP/BA,EAAKkD,SAcjBuH,EAAkB,uCAAG,WAAOC,GAAP,SAAApF,EAAA,sEAEvB2E,GAAwB,GAFD,SAIjB1E,IAAMoF,KAAK,mEAAoE,CACnFC,KAAMF,EACNG,aAAclK,EAAQd,QAND,OASvBoK,GAAwB,GACxBJ,GAAY,GACZE,GAAe,GAXQ,sDAcnBF,GAAY,GACZI,GAAwB,GAClB,IAAIa,MAAM,wBAA0B,KAAMhF,SAhB7B,QAkBvBnF,EAAQR,YAlBe,yDAAH,sDAqBlB4K,EACF,sBAAKlJ,UAAWR,KAAQyG,QAAxB,UACI,wEACE8B,GAAY,cAAC,GAAD,CACdhC,WAAW,WACXF,QAAQ,YACRL,MAAM,YACNxF,UAAU,iBACVC,QAAS,kBAAMpB,EAAM0B,eAAc,IALrB,sBAWhB4I,EACF,eAAC,WAAD,WACKT,EACD,sBAAK1I,UAAWR,KAAQ4J,MAAxB,UACI,gDACA,sBAAMpJ,UAAWR,KAAQ,gBAAzB,SAA2C8I,OAE9CP,IAAaM,GAAmB,cAAC,GAAD,CAAcR,SAAU,WAAOG,GAAY,IAASN,aAAckB,IACnG,sBAAK5I,UAAWR,KAAQyG,QAAxB,WACM8B,GACF,cAAC,GAAD,CACAhC,WAAW,WACXF,QAAQ,YACRL,MAAM,UACNvF,QAAS,kBAAMpB,EAAM0B,eAAc,IAJnC,mBAMCgI,IAAaR,GACd,cAAC,GAAD,CACAhC,WAAW,WACXF,QAAQ,YACRL,MAAM,UACNvF,QAAS,WAAO+H,GAAY,IAJ5B,yBAUNqB,EACF,mDAGJ,OACI,eAAC,EAAD,CAAOpJ,QAASpB,EAAM0B,cAAtB,WACM0H,IAAgBE,GAAwBgB,EACzClB,GAAeiB,EACff,GAAwBkB,M,SChH/BC,GAAmB,CACrBtL,MAAO,GACPC,YAAa,GAGXsL,GAAc,SAACC,EAAOC,GACxB,GAAmB,QAAhBA,EAAOnH,KAAgB,CACtB,IAIIoH,EAJEC,EAAqBH,EAAMvL,YAAcwL,EAAOtL,KAAKyE,MAAQ6G,EAAOtL,KAAKmB,OAEzEsK,EAAwBJ,EAAMxL,MAAM6L,WAAU,SAAA1L,GAAI,OAAIA,EAAKkD,KAAOoI,EAAOtL,KAAKkD,MAC9EyI,EAAmBN,EAAMxL,MAAM4L,GAGrC,GAAGE,EAAkB,CACjB,IAAMC,EAAW,2BACVD,GADU,IAEbxK,OAAQwK,EAAiBxK,OAASmK,EAAOtL,KAAKmB,UAElDoK,EAAY,aAAOF,EAAMxL,QACZ4L,GAAyBG,OAEtCL,EAAeF,EAAMxL,MAAMgM,OAAOP,EAAOtL,MAG7C,MAAO,CACHH,MAAO0L,EACPzL,YAAa0L,GAGd,GAAoB,WAAhBF,EAAOnH,KAAmB,CACjC,IAAI2H,EAAW,aAAOT,EAAMxL,OAEtB4L,EAAwBJ,EAAMxL,MAAM6L,WAAU,SAAA1L,GAAI,OAAIA,EAAKkD,KAAOoI,EAAOpL,UACzEyL,EAAmBN,EAAMxL,MAAM4L,GAC/BM,EAAoBV,EAAMvL,YAAc6L,EAAiBlH,MAE/D,GAAGkH,EACC,GAAGA,EAAiBxK,OAAS,EAAG,CAC5B,IAAMyK,EAAW,2BACVD,GADU,IAEbxK,OAAQwK,EAAiBxK,OAAS,IAEtC2K,EAAYL,GAAyBG,OAErCE,EAAcT,EAAMxL,MAAMmM,QAAO,SAAAhM,GAAI,OAAIA,EAAKkD,KAAOoI,EAAOpL,UAGpE,MAAO,CACHL,MAAOiM,EACPhM,YAAaiM,EAAoB,EAAIA,EAAoB,GAG1D,OAAIT,EAAOnH,KACPgH,IAsCAc,GA/BM,SAACvL,GAElB,MAAkCwL,qBAAWd,GAAaD,IAA1D,mBAAOgB,EAAP,KAAkBC,EAAlB,KAcMC,EAAc,CAChBxM,MAAOsM,EAAUtM,MACjBC,YAAaqM,EAAUrM,YACvBC,QAfyB,SAAAC,GACzBoM,EAAa,CAACjI,KAAM,MAAOnE,KAAMA,KAejCC,WAZ8B,SAAAC,GAC9BkM,EAAa,CAACjI,KAAM,SAAUjE,OAAQA,KAYtCC,UATqB,WACrBiM,EAAa,CAAEjI,KAAM,YAWzB,OACI,cAAC,EAAYmI,SAAb,CAAsBvI,MAAOsI,EAA7B,SACK3L,EAAMkC,YC7DJ2J,GAtBH,WACV,MAAoC1L,oBAAS,GAA7C,mBAAO2L,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,SAAA5M,GAErB2M,IADC3M,EAAc,QAOnB,OACE,eAAC,GAAD,WACG0M,GAAc,cAAC,GAAD,CAAMpK,cAAesK,IACpC,cAAC,EAAD,CAAQtK,cAAesK,IACvB,+BACE,cAAC,EAAD,UCjBR5F,IAAS6F,OAAO,cAAC,GAAD,IAAShG,SAASC,eAAe,U,mBCJjDpH,EAAOC,QAAU,CAAC,YAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,4B,mBCA1KD,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,KAAO,iC,mBCAjJD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,YAAc,8BAA8B,MAAQ,0B,mBCApGD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,eAAe,uC,mBCAvED,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,qBAAqB,aAAa,4B,mBCA/FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,8B","file":"static/js/main.86232be9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__1MGzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1W45h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__2pukL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2dwH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__1zSQH\",\"total\":\"Cart_total__26qjS\",\"total-amount\":\"Cart_total-amount__1Cgc4\",\"actions\":\"Cart_actions__3RhV0\",\"fields\":\"Cart_fields__3Ldgd\"};","import React from 'react';\r\n\r\nconst CartContext = React.createContext({\r\n    items: [],\r\n    totalAmount: 0,\r\n    addItem: (item) => {},\r\n    removeItem: (itemId) => {},\r\n    clearCart: () => {}\r\n});\r\n\r\nexport default CartContext;","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import React, { useContext, useEffect, useState } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartIcon from '../Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css';\r\n\r\n\r\nconst HeaderCartButton = props => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n  const { items } = cartCtx;\r\n\r\n  const numberOfItems = items.reduce((curNumber, item) => {\r\n    return curNumber + item.amount;\r\n  }, 0)\r\n\r\n  const btnClasess = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`\r\n\r\n  useEffect(() => {\r\n    if(items.length === 0) {\r\n      return;\r\n    }\r\n    setBtnIsHighlighted(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setBtnIsHighlighted(false);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    }\r\n  }, [items])\r\n\r\n  return (\r\n      <button className={btnClasess} onClick={props.onClick}>\r\n        <span className={classes.icon}> \r\n          <CartIcon />\r\n        </span>\r\n        <span>Your Cart</span>\r\n        <span className={classes.badge}>{numberOfItems}</span>\r\n      </button>\r\n  );\r\n}\r\n\r\nexport default HeaderCartButton;\r\n","import React, { useContext } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport mealsImage from '../../assets/meals.jpg';\r\nimport classes from './Header.module.css'\r\nimport HeaderCartButton from './HeaderCartButton';\r\n\r\nconst Header = (props) => {\r\n    const cartCtx = useContext(CartContext);\r\n    return (\r\n        <React.Fragment>\r\n            <header className={classes.header}>\r\n                <h1>React Meals iCommerce</h1>\r\n                <HeaderCartButton onClick={() => props.onHandleModal(cartCtx.totalAmount)}/>\r\n            </header>\r\n            <div className={classes['main-image']}>\r\n                <img src={mealsImage} alt=\"A table full of food\" />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","import classes from './MealsSummary.module.css';\r\n\r\nconst MealsSummary = () => {\r\n  return (\r\n    <section className={classes.summary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;","import classes from './Card.module.css';\r\n\r\nconst Card = props => {\r\n    return (\r\n        <div className={classes.card}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div className={classes.input}>\r\n            <label htmlFor={props.input.id}>{props.label}</label>\r\n            <input ref={ref} {...props.input}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Input","import { useRef, useState } from 'react';\r\nimport classes from './MealItemForm.module.css';\r\nimport Input from '../UI/Input'\r\n\r\nconst MealItemForm = props => {\r\n    const [amountIsValid, setAmountIsValid] = useState(true)\r\n    const amountInputRef = useRef();\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const enteredAmount = amountInputRef.current.value;\r\n        const enteredAmountNumber = +enteredAmount;\r\n\r\n        if(enteredAmount.trim().length === 0 || \r\n        enteredAmountNumber < 1 || \r\n        enteredAmountNumber > 5\r\n        ) {\r\n            setAmountIsValid(false)\r\n            return;\r\n        }\r\n        props.onAddToCart(enteredAmountNumber);\r\n\r\n    }\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n            <Input \r\n            ref={amountInputRef}\r\n            label=\"Amount\" \r\n            input={{\r\n                id: 'amount_' + props.id,\r\n                type: 'number',\r\n                min: '1',\r\n                max: '5',\r\n                step: '1',\r\n                defaultValue: '1'\r\n            }}/>\r\n            <button>+ Add</button>\r\n            {!amountIsValid && <p>Please entered a valid amount (1-5).</p>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MealItemForm;","import { useContext } from 'react';\r\nimport classes from './MealItem.module.css';\r\nimport MealItemForm from './MealItemForm';\r\nimport CartContext from '../../store/cart-context';\r\n\r\nconst MealItem = props => {\r\n    const cartCtx = useContext(CartContext);\r\n    const price = `$${props.price.toFixed(2)}`\r\n\r\n    const addToCartHandler = cartAmount => {\r\n        cartCtx.addItem({\r\n            id: props.id,\r\n            name: props.name,\r\n            amount: cartAmount,\r\n            price: props.price,\r\n        }) \r\n    }\r\n    return (\r\n\r\n        <li className={classes.meal} >\r\n            <div>\r\n                <h3>{props.name}</h3>\r\n                <div className={classes.description}>{props.description}</div>\r\n                <div className={classes.price}>{price}</div>\r\n            </div>\r\n            <div>\r\n                <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MealItem;","import Card from '../UI/Card';\r\nimport MealItem from './MealItem';\r\nimport classes from './AvailableMeals.module.css';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst AvailableMeals = () => {\r\n\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n     async function fetchMeals() {\r\n      try {\r\n      const response = await axios.get('https://react-http-b51ad-default-rtdb.firebaseio.com/meals.json');\r\n      const mealsArray = []\r\n\r\n      for (const key in response.data) {\r\n        mealsArray.push({...response.data[key], id: key})\r\n      }\r\n      setMeals(mealsArray);\r\n      setIsLoading(false);\r\n\r\n      } catch (error) {\r\n        setErrorMessage(error.message)\r\n        setIsLoading(false);\r\n      }\r\n    \r\n    }\r\n    fetchMeals();\r\n  }, [])\r\n\r\n  const mealsList = meals.map((meal) => {\r\n    return (<MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  )});\r\n  \r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        {!isLoading && <ul>{mealsList}</ul>}\r\n        {isLoading && <p className={classes.loading}>Loading</p>}\r\n        {!isLoading && !!errorMessage && <p className={classes.error}>Error loading the meal: {errorMessage}</p>}\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","import MealsSummary from './MealsSummary';\r\nimport AvailableMeals from './AvailableMeals';\r\nimport { Fragment } from 'react';\r\n\r\nconst Meals = () => {\r\n   return (\r\n    <Fragment>\r\n        <MealsSummary />\r\n        <AvailableMeals />\r\n    </Fragment>\r\n   )\r\n}\r\n\r\nexport default Meals;","import { Fragment } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Backdrop = props => {\r\n    return <div className={classes.backdrop} onClick={() => props.onClick(false)}></div>\r\n}\r\n\r\nconst ModalOverlay = props => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{props.children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst portalElemnt = document.getElementById('overlays');\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <Fragment>\r\n            {ReactDOM.createPortal(<Backdrop onClick={props.onClick}/>, portalElemnt)}\r\n            {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalElemnt)}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Modal;","import { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst NegativeButton = withStyles(() => ({\r\n    root: {\r\n      backgroundColor: 'rgb(207, 49, 49)',\r\n      borderColor: 'rgb(177, 37, 37)',\r\n      '&:hover': {\r\n        backgroundColor: 'rgb(177, 37, 37)',\r\n        borderColor: 'rgb(177, 37, 37)',\r\n        color: 'white'\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\nconst PositiveButton = withStyles(() => ({\r\n    root: {\r\n      backgroundColor: '#4967ec',\r\n      borderColor: '#3f5ad1',\r\n      '&:hover': {\r\n        backgroundColor: '#3f5ad1',\r\n        borderColor: '#3f5ad1',\r\n        color: 'white'\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const CustomButton = (props) => {\r\n\r\n    const buttoProps = {\r\n        color: props.color,\r\n        onClick: props.onClick,\r\n        variant: props.variant,\r\n        type: props.type,\r\n        disabled: props.disabled\r\n    }\r\n\r\n    if(props.buttonType === \"Negative\") {\r\n        return <NegativeButton {...buttoProps}>{props.children}</NegativeButton>\r\n    } else {\r\n        return <PositiveButton {...buttoProps}>{props.children}</PositiveButton>\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  export default CustomButton;","import classes from './CartItem.module.css';\nimport CustomButton from '../UI/CustomButton';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <CustomButton \n        buttonType=\"Negative\" \n        variant=\"outlined\" \n        color=\"secondary\" \n        onClick={props.onRemove}>−</CustomButton>\n        <CustomButton \n        buttonType=\"Positive\" \n        variant=\"outlined\" \n        color=\"secondary\"onClick={props.onAdd}>+</CustomButton>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { TextField  } from '@material-ui/core';\r\nimport CustomButton from '../UI/CustomButton';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport classes from './Cart.module.css';\r\nimport * as Yup from 'yup'\r\n\r\n\r\nconst MyTextField = ({...props}) => {\r\n    const [field, meta] = useField(props);\r\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n    return (\r\n        <div className={classes.fields}>\r\n            <TextField {...props} {...field} helperText={errorText} error={!!errorText}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n    .min(2, 'Name is too short!')\r\n    .max(50, 'Name is too long!')\r\n    .required('Required'),\r\n    \r\n    email: Yup.string()\r\n    .email('Invalid Email')\r\n    .required('Required'),\r\n\r\n    street: Yup.string()\r\n    .required('Required'),\r\n\r\n    postalCode: Yup.string()\r\n    .min(4, 'Invalid Postal code')\r\n    .max(10, 'Invalid Postal code')\r\n    .required('Required')\r\n\r\n});\r\n\r\n\r\nconst CheckoutForm = (props) => {\r\n    return (\r\n        <Formik\r\n        initialValues={{ \r\n          name: '', \r\n          email: '', \r\n          street: '', \r\n          postalCode: '' }}\r\n        validationSchema={FormSchema}\r\n        onSubmit={( values, { setSubmitting, resetForm }) => {\r\n          props.onSubmitForm(values);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n                <MyTextField variant=\"outlined\" label=\"Your Name\" size=\"small\" name=\"name\" type=\"input\" /> \r\n                <MyTextField variant=\"outlined\" label=\"Email\" size=\"small\" name=\"email\" type=\"email\" />\r\n                <MyTextField variant=\"outlined\" label=\"Street\" size=\"small\" name=\"street\" type=\"input\" />\r\n                <MyTextField variant=\"outlined\" label=\"Postal Code\" size=\"small\" name=\"postalCode\" type=\"input\" />\r\n\r\n              <div className={classes.actions}>\r\n                <CustomButton buttonType=\"Positive\" type=\"submit\" color=\"primary\" variant=\"contained\" disabled={isSubmitting}>Submit</CustomButton>\r\n                <CustomButton buttonType=\"Negative\" variant=\"contained\" color=\"secondary\" onClick={() => {props.hideForm()}}>Cancel</CustomButton>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default CheckoutForm;","import { Fragment, useContext } from 'react';\r\nimport Modal from '../UI/Modal';\r\nimport CartItem from './CartItem';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../store/cart-context';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport CustomButton from '../UI/CustomButton';\r\n\r\nconst Cart = props => {\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [isFormBeingSubmitted, setIsFormBeingSubmitted] = useState(false)\r\n\r\n    const cartCtx = useContext(CartContext);\r\n    const totalAmountZero = cartCtx.totalAmount < 0.001;\r\n    const cartTotalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItems = cartCtx.items.length > 0;\r\n\r\n    const cartItemRemoveHandler = id => {\r\n        cartCtx.removeItem(id);\r\n    }\r\n\r\n    const cartItemAddHandler = item => {\r\n        cartCtx.addItem({...item, amount: 1});\r\n    }\r\n    const cartItems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartCtx.items.map(item => {\r\n        return (\r\n            <div key={item.id}>\r\n                <CartItem \r\n                id={item.id}\r\n                name={item.name} \r\n                amount={item.amount}\r\n                price={item.price}\r\n                onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n                onAdd={cartItemAddHandler.bind(null, item)}\r\n                />\r\n            </div>\r\n        )\r\n    })}\r\n    </ul>\r\n\r\n    const submitOrderHandler = async (clientInfo) => {\r\n        try {\r\n        setIsFormBeingSubmitted(true);\r\n        \r\n        await axios.post('https://react-http-b51ad-default-rtdb.firebaseio.com/orders.json', {\r\n          user: clientInfo,\r\n          orderedItems: cartCtx.items\r\n        });\r\n        \r\n        setIsFormBeingSubmitted(false);\r\n        setShowForm(false);\r\n        setIsSubmitted(true);\r\n\r\n        } catch (error) {\r\n            setShowForm(false);\r\n            setIsFormBeingSubmitted(false);\r\n            throw new Error('Something went wrong!' + error.message)\r\n        }\r\n        cartCtx.clearCart();\r\n      }\r\n\r\n    const afterSubmitMessage = (\r\n        <div className={classes.actions}>\r\n            <p>Your order was submitted successfully!</p>\r\n            {!showForm && <CustomButton \r\n            buttonType=\"Negative\"\r\n            variant=\"contained\" \r\n            color=\"secondary\" \r\n            className='button--cancel'  \r\n            onClick={() => props.onHandleModal(false)}>Close</CustomButton>}\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n    const cartContent = (\r\n        <Fragment>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span className={classes['total-amount']}>{cartTotalAmount}</span>\r\n            </div>\r\n            {showForm && !totalAmountZero && <CheckoutForm hideForm={() => {setShowForm(false)}} onSubmitForm={submitOrderHandler}/>}            \r\n            <div className={classes.actions}>\r\n                {!showForm &&\r\n                <CustomButton \r\n                buttonType=\"Negative\"\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={() => props.onHandleModal(false)}\r\n                >Close</CustomButton>}\r\n                {hasItems && !showForm && \r\n                <CustomButton \r\n                buttonType=\"Positive\"\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={() => {setShowForm(true)}}\r\n                >Order</CustomButton>}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n    const loadingSubmit = (\r\n        <p>Submitting form...</p>\r\n    )\r\n    \r\n    return (\r\n        <Modal onClick={props.onHandleModal}>\r\n            {!isSubmitted && !isFormBeingSubmitted && cartContent}\r\n            {isSubmitted && afterSubmitMessage}\r\n            {isFormBeingSubmitted && loadingSubmit}\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default Cart;","import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n\r\n        if(existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n\r\n    } else if (action.type === 'REMOVE') {\r\n        let updateItems = [...state.items]\r\n\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.itemId);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        const updateTotalAmount = state.totalAmount - existingCartItem.price;\r\n\r\n        if(existingCartItem) {\r\n            if(existingCartItem.amount > 1) {\r\n                const updatedItem = {\r\n                    ...existingCartItem,\r\n                    amount: existingCartItem.amount - 1\r\n                }\r\n                updateItems[existingCartItemIndex] = updatedItem;\r\n            } else {\r\n                updateItems = state.items.filter(item => item.id !== action.itemId);\r\n            }\r\n        }\r\n        return {\r\n            items: updateItems,\r\n            totalAmount: updateTotalAmount > 0 ? updateTotalAmount : 0\r\n        };\r\n        \r\n    } else if (action.type === 'CLEAR') {\r\n        return defaultCartState;\r\n    }\r\n    \r\n\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n\r\n    const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState)\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCart({type: 'ADD', item: item})\r\n    }\r\n    \r\n    const removeItemFromCartHandler = itemId => {\r\n        dispatchCart({type: 'REMOVE', itemId: itemId})\r\n    }\r\n\r\n    const clearCartHandler = () => {\r\n        dispatchCart({ type: 'CLEAR'})\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n        clearCart: clearCartHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider;","import React, { useState } from 'react';\nimport Header from './components/Layout/Header';\nimport Meals from './components/Meals/Meals';\nimport Cart from './components/Cart/Cart'\nimport CartProvider from './store/CartProvider';\n\nconst App = () => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  const cartStateHandler = totalAmount => {\n    if(totalAmount < 0.001) {\n      setIsCartOpen(false);\n    } else {\n      setIsCartOpen(true);\n    }\n  }\n\n  return (\n    <CartProvider>\n      {isCartOpen && <Cart onHandleModal={cartStateHandler} />}\n      <Header onHandleModal={cartStateHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__3eTPw\",\"summary\":\"CartItem_summary__1iVyV\",\"price\":\"CartItem_price__1FrbA\",\"amount\":\"CartItem_amount__1GOlZ\",\"actions\":\"CartItem_actions__2XNQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__Pq0kN\",\"icon\":\"HeaderCartButton_icon__3AD6l\",\"badge\":\"HeaderCartButton_badge__31z5F\",\"bump\":\"HeaderCartButton_bump__RpAlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__YZ3Wx\",\"description\":\"MealItem_description__3sCuO\",\"price\":\"MealItem_price__3deIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__10pu1\",\"meals-appear\":\"AvailableMeals_meals-appear__dzbUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2IT0o\",\"modal\":\"Modal_modal__hVGJ3\",\"slide-down\":\"Modal_slide-down__3Wy43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2kwnU\",\"main-image\":\"Header_main-image__uiy_O\"};"],"sourceRoot":""}